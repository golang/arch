!sum
- go: Div
  commutative: "false"
  extension: "AVX.*"
  documentation: !string |-
    // Div divides elements of two vectors.
- go: MaskedDiv
  commutative: "false"
  masked: "true"
  extension: "AVX.*"
  documentation: !string |-
    // MaskedDiv divides elements of two vectors.
- go: Sqrt
  commutative: "false"
  extension: "AVX.*"
  documentation: !string |-
    // Sqrt computes the square root of each element.
- go: MaskedSqrt
  commutative: "false"
  masked: "true"
  extension: "AVX.*"
  documentation: !string |-
    // MaskedSqrt computes the square root of each element.
- go: ApproximateReciprocal
  commutative: "false"
  extension: "AVX.*"
  documentation: !string |-
    // ApproximateReciprocal computes an approximate reciprocal of each element.
- go: MaskedApproximateReciprocal
  commutative: "false"
  masked: "true"
  extension: "AVX.*"
  documentation: !string |-
    // MaskedApproximateReciprocal computes an approximate reciprocal of each element.
- go: ApproximateReciprocalOfSqrt
  commutative: "false"
  extension: "AVX.*"
  documentation: !string |-
    // ApproximateReciprocalOfSqrt computes an approximate reciprocal of the square root of each element.
- go: MaskedApproximateReciprocalOfSqrt
  commutative: "false"
  masked: "true"
  extension: "AVX.*"
  documentation: !string |-
    // MaskedApproximateReciprocalOfSqrt computes an approximate reciprocal of the square root of each element.
- go: MaskedMulByPowOf2 # This operation is all after AVX512, the unmasked version will be generated.
  commutative: "false"
  masked: "true"
  extension: "AVX.*"
  documentation: !string |-
    // MaskedMulByPowOf2 multiplies elements by a power of 2.

- go: Round
  commutative: "false"
  extension: "AVX.*"
  constImm: 0
  documentation: !string |-
    // Round rounds elements to the nearest integer.
- go: MaskedRoundWithPrecision
  commutative: "false"
  extension: "AVX.*"
  constImm: 0
  masked: "true"
  documentation: !string |-
    // MaskedRoundWithPrecision rounds elements with specified precision.
- go: MaskedDiffWithRoundWithPrecision
  commutative: "false"
  extension: "AVX.*"
  constImm: 0
  masked: "true"
  documentation: !string |-
    // MaskedDiffWithRoundWithPrecision computes the difference after rounding with specified precision.

- go: Floor
  commutative: "false"
  extension: "AVX.*"
  constImm: 1
  documentation: !string |-
    // Floor rounds elements down to the nearest integer.
- go: MaskedFloorWithPrecision
  commutative: "false"
  extension: "AVX.*"
  constImm: 1
  masked: "true"
  documentation: !string |-
    // MaskedFloorWithPrecision rounds elements down with specified precision, masked.
- go: MaskedDiffWithFloorWithPrecision
  commutative: "false"
  extension: "AVX.*"
  constImm: 1
  masked: "true"
  documentation: !string |-
    // MaskedDiffWithFloorWithPrecision computes the difference after flooring with specified precision.

- go: Ceil
  commutative: "false"
  extension: "AVX.*"
  constImm: 2
  documentation: !string |-
    // Ceil rounds elements up to the nearest integer.
- go: MaskedCeilWithPrecision
  commutative: "false"
  extension: "AVX.*"
  constImm: 2
  masked: "true"
  documentation: !string |-
    // MaskedCeilWithPrecision rounds elements up with specified precision, masked.
- go: MaskedDiffWithCeilWithPrecision
  commutative: "false"
  extension: "AVX.*"
  constImm: 2
  masked: "true"
  documentation: !string |-
    // MaskedDiffWithCeilWithPrecision computes the difference after ceiling with specified precision.

- go: Trunc
  commutative: "false"
  extension: "AVX.*"
  constImm: 3
  documentation: !string |-
    // Trunc truncates elements towards zero.
- go: MaskedTruncWithPrecision
  commutative: "false"
  extension: "AVX.*"
  constImm: 3
  masked: "true"
  documentation: !string |-
    // MaskedTruncWithPrecision truncates elements with specified precision.
- go: MaskedDiffWithTruncWithPrecision
  commutative: "false"
  extension: "AVX.*"
  constImm: 3
  masked: "true"
  documentation: !string |-
    // MaskedDiffWithTruncWithPrecision computes the difference after truncating with specified precision.

- go: AddSub
  commutative: "false"
  extension: "AVX.*"
  documentation: !string |-
    // AddSub subtracts even elements and adds odd elements of two vectors.