!sum
- go: Add
  commutative: "true"
  extension: "AVX.*"
  documentation: !string |-
    // Add adds corresponding elements of two vectors.
- go: SaturatedAdd
  commutative: "true"
  extension: "AVX.*"
  documentation: !string |-
    // SaturatedAdd adds corresponding elements of two vectors with saturation.
- go: MaskedAdd
  masked: "true"
  commutative: "true"
  extension: "AVX.*"
  documentation: !string |-
    // MaskedAdd adds corresponding elements of two vectors.
- go: MaskedSaturatedAdd
  masked: "true"
  commutative: "true"
  extension: "AVX.*"
  documentation: !string |-
    // MaskedSaturatedAdd adds corresponding elements of two vectors with saturation.
- go: Sub
  commutative: "false"
  extension: "AVX.*"
  documentation: !string |-
    // Sub subtracts corresponding elements of two vectors.
- go: SaturatedSub
  commutative: "false"
  extension: "AVX.*"
  documentation: !string |-
    // SaturatedSub subtracts corresponding elements of two vectors with saturation.
- go: MaskedSub
  masked: "true"
  commutative: "false"
  extension: "AVX.*"
  documentation: !string |-
    // MaskedSub subtracts corresponding elements of two vectors.
- go: MaskedSaturatedSub
  masked: "true"
  commutative: "false"
  extension: "AVX.*"
  documentation: !string |-
    // MaskedSaturatedSub subtracts corresponding elements of two vectors with saturation.
- go: PairwiseAdd
  commutative: "false"
  extension: "AVX.*"
  documentation: !string |-
    // PairwiseAdd horizontally adds adjacent pairs of elements.
    // For x = [x0, x1, x2, x3, ...] and y = [y0, y1, y2, y3, ...], the result is [y0+y1, y2+y3, ..., x0+x1, x2+x3, ...].
- go: PairwiseSub
  commutative: "false"
  extension: "AVX.*"
  documentation: !string |-
    // PairwiseSub horizontally subtracts adjacent pairs of elements.
    // For x = [x0, x1, x2, x3, ...] and y = [y0, y1, y2, y3, ...], the result is [y0-y1, y2-y3, ..., x0-x1, x2-x3, ...].
- go: SaturatedPairwiseAdd
  commutative: "false"
  extension: "AVX.*"
  documentation: !string |-
    // SaturatedPairwiseAdd horizontally adds adjacent pairs of elements with saturation.
    // For x = [x0, x1, x2, x3, ...] and y = [y0, y1, y2, y3, ...], the result is [y0+y1, y2+y3, ..., x0+x1, x2+x3, ...].
- go: SaturatedPairwiseSub
  commutative: "false"
  extension: "AVX.*"
  documentation: !string |-
    // SaturatedPairwiseSub horizontally subtracts adjacent pairs of elements with saturation.
    // For x = [x0, x1, x2, x3, ...] and y = [y0, y1, y2, y3, ...], the result is [y0-y1, y2-y3, ..., x0-x1, x2-x3, ...].
