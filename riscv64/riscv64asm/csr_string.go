// Code generated by "stringer -type=Csr"; DO NOT EDIT.

package riscv64asm

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[USTATUS-0]
	_ = x[FFLAGS-1]
	_ = x[FRM-2]
	_ = x[FCSR-3]
	_ = x[UIE-4]
	_ = x[UTVEC-5]
	_ = x[UTVT-7]
	_ = x[VSTART-8]
	_ = x[VXSAT-9]
	_ = x[VXRM-10]
	_ = x[VCSR-15]
	_ = x[USCRATCH-64]
	_ = x[UEPC-65]
	_ = x[UCAUSE-66]
	_ = x[UTVAL-67]
	_ = x[UIP-68]
	_ = x[UNXTI-69]
	_ = x[UINTSTATUS-70]
	_ = x[USCRATCHCSW-72]
	_ = x[USCRATCHCSWL-73]
	_ = x[SSTATUS-256]
	_ = x[SEDELEG-258]
	_ = x[SIDELEG-259]
	_ = x[SIE-260]
	_ = x[STVEC-261]
	_ = x[SCOUNTEREN-262]
	_ = x[STVT-263]
	_ = x[SSCRATCH-320]
	_ = x[SEPC-321]
	_ = x[SCAUSE-322]
	_ = x[STVAL-323]
	_ = x[SIP-324]
	_ = x[SNXTI-325]
	_ = x[SINTSTATUS-326]
	_ = x[SSCRATCHCSW-328]
	_ = x[SSCRATCHCSWL-329]
	_ = x[SATP-384]
	_ = x[VSSTATUS-512]
	_ = x[VSIE-516]
	_ = x[VSTVEC-517]
	_ = x[VSSCRATCH-576]
	_ = x[VSEPC-577]
	_ = x[VSCAUSE-578]
	_ = x[VSTVAL-579]
	_ = x[VSIP-580]
	_ = x[VSATP-640]
	_ = x[MSTATUS-768]
	_ = x[MISA-769]
	_ = x[MEDELEG-770]
	_ = x[MIDELEG-771]
	_ = x[MIE-772]
	_ = x[MTVEC-773]
	_ = x[MCOUNTEREN-774]
	_ = x[MTVT-775]
	_ = x[MSTATUSH-784]
	_ = x[MCOUNTINHIBIT-800]
	_ = x[MHPMEVENT3-803]
	_ = x[MHPMEVENT4-804]
	_ = x[MHPMEVENT5-805]
	_ = x[MHPMEVENT6-806]
	_ = x[MHPMEVENT7-807]
	_ = x[MHPMEVENT8-808]
	_ = x[MHPMEVENT9-809]
	_ = x[MHPMEVENT10-810]
	_ = x[MHPMEVENT11-811]
	_ = x[MHPMEVENT12-812]
	_ = x[MHPMEVENT13-813]
	_ = x[MHPMEVENT14-814]
	_ = x[MHPMEVENT15-815]
	_ = x[MHPMEVENT16-816]
	_ = x[MHPMEVENT17-817]
	_ = x[MHPMEVENT18-818]
	_ = x[MHPMEVENT19-819]
	_ = x[MHPMEVENT20-820]
	_ = x[MHPMEVENT21-821]
	_ = x[MHPMEVENT22-822]
	_ = x[MHPMEVENT23-823]
	_ = x[MHPMEVENT24-824]
	_ = x[MHPMEVENT25-825]
	_ = x[MHPMEVENT26-826]
	_ = x[MHPMEVENT27-827]
	_ = x[MHPMEVENT28-828]
	_ = x[MHPMEVENT29-829]
	_ = x[MHPMEVENT30-830]
	_ = x[MHPMEVENT31-831]
	_ = x[MSCRATCH-832]
	_ = x[MEPC-833]
	_ = x[MCAUSE-834]
	_ = x[MTVAL-835]
	_ = x[MIP-836]
	_ = x[MNXTI-837]
	_ = x[MINTSTATUS-838]
	_ = x[MSCRATCHCSW-840]
	_ = x[MSCRATCHCSWL-841]
	_ = x[MTINST-842]
	_ = x[MTVAL2-843]
	_ = x[PMPCFG0-928]
	_ = x[PMPCFG1-929]
	_ = x[PMPCFG2-930]
	_ = x[PMPCFG3-931]
	_ = x[PMPADDR0-944]
	_ = x[PMPADDR1-945]
	_ = x[PMPADDR2-946]
	_ = x[PMPADDR3-947]
	_ = x[PMPADDR4-948]
	_ = x[PMPADDR5-949]
	_ = x[PMPADDR6-950]
	_ = x[PMPADDR7-951]
	_ = x[PMPADDR8-952]
	_ = x[PMPADDR9-953]
	_ = x[PMPADDR10-954]
	_ = x[PMPADDR11-955]
	_ = x[PMPADDR12-956]
	_ = x[PMPADDR13-957]
	_ = x[PMPADDR14-958]
	_ = x[PMPADDR15-959]
	_ = x[HSTATUS-1536]
	_ = x[HEDELEG-1538]
	_ = x[HIDELEG-1539]
	_ = x[HIE-1540]
	_ = x[HTIMEDELTA-1541]
	_ = x[HCOUNTEREN-1542]
	_ = x[HGEIE-1543]
	_ = x[HTIMEDELTAH-1557]
	_ = x[HTVAL-1603]
	_ = x[HIP-1604]
	_ = x[HVIP-1605]
	_ = x[HTINST-1610]
	_ = x[HGATP-1664]
	_ = x[TSELECT-1952]
	_ = x[TDATA1-1953]
	_ = x[TDATA2-1954]
	_ = x[TDATA3-1955]
	_ = x[TINFO-1956]
	_ = x[TCONTROL-1957]
	_ = x[MCONTEXT-1960]
	_ = x[MNOISE-1961]
	_ = x[SCONTEXT-1962]
	_ = x[DCSR-1968]
	_ = x[DPC-1969]
	_ = x[DSCRATCH0-1970]
	_ = x[DSCRATCH1-1971]
	_ = x[MCYCLE-2816]
	_ = x[MINSTRET-2818]
	_ = x[MHPMCOUNTER3-2819]
	_ = x[MHPMCOUNTER4-2820]
	_ = x[MHPMCOUNTER5-2821]
	_ = x[MHPMCOUNTER6-2822]
	_ = x[MHPMCOUNTER7-2823]
	_ = x[MHPMCOUNTER8-2824]
	_ = x[MHPMCOUNTER9-2825]
	_ = x[MHPMCOUNTER10-2826]
	_ = x[MHPMCOUNTER11-2827]
	_ = x[MHPMCOUNTER12-2828]
	_ = x[MHPMCOUNTER13-2829]
	_ = x[MHPMCOUNTER14-2830]
	_ = x[MHPMCOUNTER15-2831]
	_ = x[MHPMCOUNTER16-2832]
	_ = x[MHPMCOUNTER17-2833]
	_ = x[MHPMCOUNTER18-2834]
	_ = x[MHPMCOUNTER19-2835]
	_ = x[MHPMCOUNTER20-2836]
	_ = x[MHPMCOUNTER21-2837]
	_ = x[MHPMCOUNTER22-2838]
	_ = x[MHPMCOUNTER23-2839]
	_ = x[MHPMCOUNTER24-2840]
	_ = x[MHPMCOUNTER25-2841]
	_ = x[MHPMCOUNTER26-2842]
	_ = x[MHPMCOUNTER27-2843]
	_ = x[MHPMCOUNTER28-2844]
	_ = x[MHPMCOUNTER29-2845]
	_ = x[MHPMCOUNTER30-2846]
	_ = x[MHPMCOUNTER31-2847]
	_ = x[MCYCLEH-2944]
	_ = x[MINSTRETH-2946]
	_ = x[MHPMCOUNTER3H-2947]
	_ = x[MHPMCOUNTER4H-2948]
	_ = x[MHPMCOUNTER5H-2949]
	_ = x[MHPMCOUNTER6H-2950]
	_ = x[MHPMCOUNTER7H-2951]
	_ = x[MHPMCOUNTER8H-2952]
	_ = x[MHPMCOUNTER9H-2953]
	_ = x[MHPMCOUNTER10H-2954]
	_ = x[MHPMCOUNTER11H-2955]
	_ = x[MHPMCOUNTER12H-2956]
	_ = x[MHPMCOUNTER13H-2957]
	_ = x[MHPMCOUNTER14H-2958]
	_ = x[MHPMCOUNTER15H-2959]
	_ = x[MHPMCOUNTER16H-2960]
	_ = x[MHPMCOUNTER17H-2961]
	_ = x[MHPMCOUNTER18H-2962]
	_ = x[MHPMCOUNTER19H-2963]
	_ = x[MHPMCOUNTER20H-2964]
	_ = x[MHPMCOUNTER21H-2965]
	_ = x[MHPMCOUNTER22H-2966]
	_ = x[MHPMCOUNTER23H-2967]
	_ = x[MHPMCOUNTER24H-2968]
	_ = x[MHPMCOUNTER25H-2969]
	_ = x[MHPMCOUNTER26H-2970]
	_ = x[MHPMCOUNTER27H-2971]
	_ = x[MHPMCOUNTER28H-2972]
	_ = x[MHPMCOUNTER29H-2973]
	_ = x[MHPMCOUNTER30H-2974]
	_ = x[MHPMCOUNTER31H-2975]
	_ = x[CYCLE-3072]
	_ = x[TIME-3073]
	_ = x[INSTRET-3074]
	_ = x[HPMCOUNTER3-3075]
	_ = x[HPMCOUNTER4-3076]
	_ = x[HPMCOUNTER5-3077]
	_ = x[HPMCOUNTER6-3078]
	_ = x[HPMCOUNTER7-3079]
	_ = x[HPMCOUNTER8-3080]
	_ = x[HPMCOUNTER9-3081]
	_ = x[HPMCOUNTER10-3082]
	_ = x[HPMCOUNTER11-3083]
	_ = x[HPMCOUNTER12-3084]
	_ = x[HPMCOUNTER13-3085]
	_ = x[HPMCOUNTER14-3086]
	_ = x[HPMCOUNTER15-3087]
	_ = x[HPMCOUNTER16-3088]
	_ = x[HPMCOUNTER17-3089]
	_ = x[HPMCOUNTER18-3090]
	_ = x[HPMCOUNTER19-3091]
	_ = x[HPMCOUNTER20-3092]
	_ = x[HPMCOUNTER21-3093]
	_ = x[HPMCOUNTER22-3094]
	_ = x[HPMCOUNTER23-3095]
	_ = x[HPMCOUNTER24-3096]
	_ = x[HPMCOUNTER25-3097]
	_ = x[HPMCOUNTER26-3098]
	_ = x[HPMCOUNTER27-3099]
	_ = x[HPMCOUNTER28-3100]
	_ = x[HPMCOUNTER29-3101]
	_ = x[HPMCOUNTER30-3102]
	_ = x[HPMCOUNTER31-3103]
	_ = x[VL-3104]
	_ = x[VTYPE-3105]
	_ = x[VLENB-3106]
	_ = x[CYCLEH-3200]
	_ = x[TIMEH-3201]
	_ = x[INSTRETH-3202]
	_ = x[HPMCOUNTER3H-3203]
	_ = x[HPMCOUNTER4H-3204]
	_ = x[HPMCOUNTER5H-3205]
	_ = x[HPMCOUNTER6H-3206]
	_ = x[HPMCOUNTER7H-3207]
	_ = x[HPMCOUNTER8H-3208]
	_ = x[HPMCOUNTER9H-3209]
	_ = x[HPMCOUNTER10H-3210]
	_ = x[HPMCOUNTER11H-3211]
	_ = x[HPMCOUNTER12H-3212]
	_ = x[HPMCOUNTER13H-3213]
	_ = x[HPMCOUNTER14H-3214]
	_ = x[HPMCOUNTER15H-3215]
	_ = x[HPMCOUNTER16H-3216]
	_ = x[HPMCOUNTER17H-3217]
	_ = x[HPMCOUNTER18H-3218]
	_ = x[HPMCOUNTER19H-3219]
	_ = x[HPMCOUNTER20H-3220]
	_ = x[HPMCOUNTER21H-3221]
	_ = x[HPMCOUNTER22H-3222]
	_ = x[HPMCOUNTER23H-3223]
	_ = x[HPMCOUNTER24H-3224]
	_ = x[HPMCOUNTER25H-3225]
	_ = x[HPMCOUNTER26H-3226]
	_ = x[HPMCOUNTER27H-3227]
	_ = x[HPMCOUNTER28H-3228]
	_ = x[HPMCOUNTER29H-3229]
	_ = x[HPMCOUNTER30H-3230]
	_ = x[HPMCOUNTER31H-3231]
	_ = x[HGEIP-3602]
	_ = x[MVENDORID-3857]
	_ = x[MARCHID-3858]
	_ = x[MIMPID-3859]
	_ = x[MHARTID-3860]
	_ = x[MENTROPY-3861]
}

const _Csr_name = "USTATUSFFLAGSFRMFCSRUIEUTVECUTVTVSTARTVXSATVXRMVCSRUSCRATCHUEPCUCAUSEUTVALUIPUNXTIUINTSTATUSUSCRATCHCSWUSCRATCHCSWLSSTATUSSEDELEGSIDELEGSIESTVECSCOUNTERENSTVTSSCRATCHSEPCSCAUSESTVALSIPSNXTISINTSTATUSSSCRATCHCSWSSCRATCHCSWLSATPVSSTATUSVSIEVSTVECVSSCRATCHVSEPCVSCAUSEVSTVALVSIPVSATPMSTATUSMISAMEDELEGMIDELEGMIEMTVECMCOUNTERENMTVTMSTATUSHMCOUNTINHIBITMHPMEVENT3MHPMEVENT4MHPMEVENT5MHPMEVENT6MHPMEVENT7MHPMEVENT8MHPMEVENT9MHPMEVENT10MHPMEVENT11MHPMEVENT12MHPMEVENT13MHPMEVENT14MHPMEVENT15MHPMEVENT16MHPMEVENT17MHPMEVENT18MHPMEVENT19MHPMEVENT20MHPMEVENT21MHPMEVENT22MHPMEVENT23MHPMEVENT24MHPMEVENT25MHPMEVENT26MHPMEVENT27MHPMEVENT28MHPMEVENT29MHPMEVENT30MHPMEVENT31MSCRATCHMEPCMCAUSEMTVALMIPMNXTIMINTSTATUSMSCRATCHCSWMSCRATCHCSWLMTINSTMTVAL2PMPCFG0PMPCFG1PMPCFG2PMPCFG3PMPADDR0PMPADDR1PMPADDR2PMPADDR3PMPADDR4PMPADDR5PMPADDR6PMPADDR7PMPADDR8PMPADDR9PMPADDR10PMPADDR11PMPADDR12PMPADDR13PMPADDR14PMPADDR15HSTATUSHEDELEGHIDELEGHIEHTIMEDELTAHCOUNTERENHGEIEHTIMEDELTAHHTVALHIPHVIPHTINSTHGATPTSELECTTDATA1TDATA2TDATA3TINFOTCONTROLMCONTEXTMNOISESCONTEXTDCSRDPCDSCRATCH0DSCRATCH1MCYCLEMINSTRETMHPMCOUNTER3MHPMCOUNTER4MHPMCOUNTER5MHPMCOUNTER6MHPMCOUNTER7MHPMCOUNTER8MHPMCOUNTER9MHPMCOUNTER10MHPMCOUNTER11MHPMCOUNTER12MHPMCOUNTER13MHPMCOUNTER14MHPMCOUNTER15MHPMCOUNTER16MHPMCOUNTER17MHPMCOUNTER18MHPMCOUNTER19MHPMCOUNTER20MHPMCOUNTER21MHPMCOUNTER22MHPMCOUNTER23MHPMCOUNTER24MHPMCOUNTER25MHPMCOUNTER26MHPMCOUNTER27MHPMCOUNTER28MHPMCOUNTER29MHPMCOUNTER30MHPMCOUNTER31MCYCLEHMINSTRETHMHPMCOUNTER3HMHPMCOUNTER4HMHPMCOUNTER5HMHPMCOUNTER6HMHPMCOUNTER7HMHPMCOUNTER8HMHPMCOUNTER9HMHPMCOUNTER10HMHPMCOUNTER11HMHPMCOUNTER12HMHPMCOUNTER13HMHPMCOUNTER14HMHPMCOUNTER15HMHPMCOUNTER16HMHPMCOUNTER17HMHPMCOUNTER18HMHPMCOUNTER19HMHPMCOUNTER20HMHPMCOUNTER21HMHPMCOUNTER22HMHPMCOUNTER23HMHPMCOUNTER24HMHPMCOUNTER25HMHPMCOUNTER26HMHPMCOUNTER27HMHPMCOUNTER28HMHPMCOUNTER29HMHPMCOUNTER30HMHPMCOUNTER31HCYCLETIMEINSTRETHPMCOUNTER3HPMCOUNTER4HPMCOUNTER5HPMCOUNTER6HPMCOUNTER7HPMCOUNTER8HPMCOUNTER9HPMCOUNTER10HPMCOUNTER11HPMCOUNTER12HPMCOUNTER13HPMCOUNTER14HPMCOUNTER15HPMCOUNTER16HPMCOUNTER17HPMCOUNTER18HPMCOUNTER19HPMCOUNTER20HPMCOUNTER21HPMCOUNTER22HPMCOUNTER23HPMCOUNTER24HPMCOUNTER25HPMCOUNTER26HPMCOUNTER27HPMCOUNTER28HPMCOUNTER29HPMCOUNTER30HPMCOUNTER31VLVTYPEVLENBCYCLEHTIMEHINSTRETHHPMCOUNTER3HHPMCOUNTER4HHPMCOUNTER5HHPMCOUNTER6HHPMCOUNTER7HHPMCOUNTER8HHPMCOUNTER9HHPMCOUNTER10HHPMCOUNTER11HHPMCOUNTER12HHPMCOUNTER13HHPMCOUNTER14HHPMCOUNTER15HHPMCOUNTER16HHPMCOUNTER17HHPMCOUNTER18HHPMCOUNTER19HHPMCOUNTER20HHPMCOUNTER21HHPMCOUNTER22HHPMCOUNTER23HHPMCOUNTER24HHPMCOUNTER25HHPMCOUNTER26HHPMCOUNTER27HHPMCOUNTER28HHPMCOUNTER29HHPMCOUNTER30HHPMCOUNTER31HHGEIPMVENDORIDMARCHIDMIMPIDMHARTIDMENTROPY"

var _Csr_map = map[Csr]string{
	0:    _Csr_name[0:7],
	1:    _Csr_name[7:13],
	2:    _Csr_name[13:16],
	3:    _Csr_name[16:20],
	4:    _Csr_name[20:23],
	5:    _Csr_name[23:28],
	7:    _Csr_name[28:32],
	8:    _Csr_name[32:38],
	9:    _Csr_name[38:43],
	10:   _Csr_name[43:47],
	15:   _Csr_name[47:51],
	64:   _Csr_name[51:59],
	65:   _Csr_name[59:63],
	66:   _Csr_name[63:69],
	67:   _Csr_name[69:74],
	68:   _Csr_name[74:77],
	69:   _Csr_name[77:82],
	70:   _Csr_name[82:92],
	72:   _Csr_name[92:103],
	73:   _Csr_name[103:115],
	256:  _Csr_name[115:122],
	258:  _Csr_name[122:129],
	259:  _Csr_name[129:136],
	260:  _Csr_name[136:139],
	261:  _Csr_name[139:144],
	262:  _Csr_name[144:154],
	263:  _Csr_name[154:158],
	320:  _Csr_name[158:166],
	321:  _Csr_name[166:170],
	322:  _Csr_name[170:176],
	323:  _Csr_name[176:181],
	324:  _Csr_name[181:184],
	325:  _Csr_name[184:189],
	326:  _Csr_name[189:199],
	328:  _Csr_name[199:210],
	329:  _Csr_name[210:222],
	384:  _Csr_name[222:226],
	512:  _Csr_name[226:234],
	516:  _Csr_name[234:238],
	517:  _Csr_name[238:244],
	576:  _Csr_name[244:253],
	577:  _Csr_name[253:258],
	578:  _Csr_name[258:265],
	579:  _Csr_name[265:271],
	580:  _Csr_name[271:275],
	640:  _Csr_name[275:280],
	768:  _Csr_name[280:287],
	769:  _Csr_name[287:291],
	770:  _Csr_name[291:298],
	771:  _Csr_name[298:305],
	772:  _Csr_name[305:308],
	773:  _Csr_name[308:313],
	774:  _Csr_name[313:323],
	775:  _Csr_name[323:327],
	784:  _Csr_name[327:335],
	800:  _Csr_name[335:348],
	803:  _Csr_name[348:358],
	804:  _Csr_name[358:368],
	805:  _Csr_name[368:378],
	806:  _Csr_name[378:388],
	807:  _Csr_name[388:398],
	808:  _Csr_name[398:408],
	809:  _Csr_name[408:418],
	810:  _Csr_name[418:429],
	811:  _Csr_name[429:440],
	812:  _Csr_name[440:451],
	813:  _Csr_name[451:462],
	814:  _Csr_name[462:473],
	815:  _Csr_name[473:484],
	816:  _Csr_name[484:495],
	817:  _Csr_name[495:506],
	818:  _Csr_name[506:517],
	819:  _Csr_name[517:528],
	820:  _Csr_name[528:539],
	821:  _Csr_name[539:550],
	822:  _Csr_name[550:561],
	823:  _Csr_name[561:572],
	824:  _Csr_name[572:583],
	825:  _Csr_name[583:594],
	826:  _Csr_name[594:605],
	827:  _Csr_name[605:616],
	828:  _Csr_name[616:627],
	829:  _Csr_name[627:638],
	830:  _Csr_name[638:649],
	831:  _Csr_name[649:660],
	832:  _Csr_name[660:668],
	833:  _Csr_name[668:672],
	834:  _Csr_name[672:678],
	835:  _Csr_name[678:683],
	836:  _Csr_name[683:686],
	837:  _Csr_name[686:691],
	838:  _Csr_name[691:701],
	840:  _Csr_name[701:712],
	841:  _Csr_name[712:724],
	842:  _Csr_name[724:730],
	843:  _Csr_name[730:736],
	928:  _Csr_name[736:743],
	929:  _Csr_name[743:750],
	930:  _Csr_name[750:757],
	931:  _Csr_name[757:764],
	944:  _Csr_name[764:772],
	945:  _Csr_name[772:780],
	946:  _Csr_name[780:788],
	947:  _Csr_name[788:796],
	948:  _Csr_name[796:804],
	949:  _Csr_name[804:812],
	950:  _Csr_name[812:820],
	951:  _Csr_name[820:828],
	952:  _Csr_name[828:836],
	953:  _Csr_name[836:844],
	954:  _Csr_name[844:853],
	955:  _Csr_name[853:862],
	956:  _Csr_name[862:871],
	957:  _Csr_name[871:880],
	958:  _Csr_name[880:889],
	959:  _Csr_name[889:898],
	1536: _Csr_name[898:905],
	1538: _Csr_name[905:912],
	1539: _Csr_name[912:919],
	1540: _Csr_name[919:922],
	1541: _Csr_name[922:932],
	1542: _Csr_name[932:942],
	1543: _Csr_name[942:947],
	1557: _Csr_name[947:958],
	1603: _Csr_name[958:963],
	1604: _Csr_name[963:966],
	1605: _Csr_name[966:970],
	1610: _Csr_name[970:976],
	1664: _Csr_name[976:981],
	1952: _Csr_name[981:988],
	1953: _Csr_name[988:994],
	1954: _Csr_name[994:1000],
	1955: _Csr_name[1000:1006],
	1956: _Csr_name[1006:1011],
	1957: _Csr_name[1011:1019],
	1960: _Csr_name[1019:1027],
	1961: _Csr_name[1027:1033],
	1962: _Csr_name[1033:1041],
	1968: _Csr_name[1041:1045],
	1969: _Csr_name[1045:1048],
	1970: _Csr_name[1048:1057],
	1971: _Csr_name[1057:1066],
	2816: _Csr_name[1066:1072],
	2818: _Csr_name[1072:1080],
	2819: _Csr_name[1080:1092],
	2820: _Csr_name[1092:1104],
	2821: _Csr_name[1104:1116],
	2822: _Csr_name[1116:1128],
	2823: _Csr_name[1128:1140],
	2824: _Csr_name[1140:1152],
	2825: _Csr_name[1152:1164],
	2826: _Csr_name[1164:1177],
	2827: _Csr_name[1177:1190],
	2828: _Csr_name[1190:1203],
	2829: _Csr_name[1203:1216],
	2830: _Csr_name[1216:1229],
	2831: _Csr_name[1229:1242],
	2832: _Csr_name[1242:1255],
	2833: _Csr_name[1255:1268],
	2834: _Csr_name[1268:1281],
	2835: _Csr_name[1281:1294],
	2836: _Csr_name[1294:1307],
	2837: _Csr_name[1307:1320],
	2838: _Csr_name[1320:1333],
	2839: _Csr_name[1333:1346],
	2840: _Csr_name[1346:1359],
	2841: _Csr_name[1359:1372],
	2842: _Csr_name[1372:1385],
	2843: _Csr_name[1385:1398],
	2844: _Csr_name[1398:1411],
	2845: _Csr_name[1411:1424],
	2846: _Csr_name[1424:1437],
	2847: _Csr_name[1437:1450],
	2944: _Csr_name[1450:1457],
	2946: _Csr_name[1457:1466],
	2947: _Csr_name[1466:1479],
	2948: _Csr_name[1479:1492],
	2949: _Csr_name[1492:1505],
	2950: _Csr_name[1505:1518],
	2951: _Csr_name[1518:1531],
	2952: _Csr_name[1531:1544],
	2953: _Csr_name[1544:1557],
	2954: _Csr_name[1557:1571],
	2955: _Csr_name[1571:1585],
	2956: _Csr_name[1585:1599],
	2957: _Csr_name[1599:1613],
	2958: _Csr_name[1613:1627],
	2959: _Csr_name[1627:1641],
	2960: _Csr_name[1641:1655],
	2961: _Csr_name[1655:1669],
	2962: _Csr_name[1669:1683],
	2963: _Csr_name[1683:1697],
	2964: _Csr_name[1697:1711],
	2965: _Csr_name[1711:1725],
	2966: _Csr_name[1725:1739],
	2967: _Csr_name[1739:1753],
	2968: _Csr_name[1753:1767],
	2969: _Csr_name[1767:1781],
	2970: _Csr_name[1781:1795],
	2971: _Csr_name[1795:1809],
	2972: _Csr_name[1809:1823],
	2973: _Csr_name[1823:1837],
	2974: _Csr_name[1837:1851],
	2975: _Csr_name[1851:1865],
	3072: _Csr_name[1865:1870],
	3073: _Csr_name[1870:1874],
	3074: _Csr_name[1874:1881],
	3075: _Csr_name[1881:1892],
	3076: _Csr_name[1892:1903],
	3077: _Csr_name[1903:1914],
	3078: _Csr_name[1914:1925],
	3079: _Csr_name[1925:1936],
	3080: _Csr_name[1936:1947],
	3081: _Csr_name[1947:1958],
	3082: _Csr_name[1958:1970],
	3083: _Csr_name[1970:1982],
	3084: _Csr_name[1982:1994],
	3085: _Csr_name[1994:2006],
	3086: _Csr_name[2006:2018],
	3087: _Csr_name[2018:2030],
	3088: _Csr_name[2030:2042],
	3089: _Csr_name[2042:2054],
	3090: _Csr_name[2054:2066],
	3091: _Csr_name[2066:2078],
	3092: _Csr_name[2078:2090],
	3093: _Csr_name[2090:2102],
	3094: _Csr_name[2102:2114],
	3095: _Csr_name[2114:2126],
	3096: _Csr_name[2126:2138],
	3097: _Csr_name[2138:2150],
	3098: _Csr_name[2150:2162],
	3099: _Csr_name[2162:2174],
	3100: _Csr_name[2174:2186],
	3101: _Csr_name[2186:2198],
	3102: _Csr_name[2198:2210],
	3103: _Csr_name[2210:2222],
	3104: _Csr_name[2222:2224],
	3105: _Csr_name[2224:2229],
	3106: _Csr_name[2229:2234],
	3200: _Csr_name[2234:2240],
	3201: _Csr_name[2240:2245],
	3202: _Csr_name[2245:2253],
	3203: _Csr_name[2253:2265],
	3204: _Csr_name[2265:2277],
	3205: _Csr_name[2277:2289],
	3206: _Csr_name[2289:2301],
	3207: _Csr_name[2301:2313],
	3208: _Csr_name[2313:2325],
	3209: _Csr_name[2325:2337],
	3210: _Csr_name[2337:2350],
	3211: _Csr_name[2350:2363],
	3212: _Csr_name[2363:2376],
	3213: _Csr_name[2376:2389],
	3214: _Csr_name[2389:2402],
	3215: _Csr_name[2402:2415],
	3216: _Csr_name[2415:2428],
	3217: _Csr_name[2428:2441],
	3218: _Csr_name[2441:2454],
	3219: _Csr_name[2454:2467],
	3220: _Csr_name[2467:2480],
	3221: _Csr_name[2480:2493],
	3222: _Csr_name[2493:2506],
	3223: _Csr_name[2506:2519],
	3224: _Csr_name[2519:2532],
	3225: _Csr_name[2532:2545],
	3226: _Csr_name[2545:2558],
	3227: _Csr_name[2558:2571],
	3228: _Csr_name[2571:2584],
	3229: _Csr_name[2584:2597],
	3230: _Csr_name[2597:2610],
	3231: _Csr_name[2610:2623],
	3602: _Csr_name[2623:2628],
	3857: _Csr_name[2628:2637],
	3858: _Csr_name[2637:2644],
	3859: _Csr_name[2644:2650],
	3860: _Csr_name[2650:2657],
	3861: _Csr_name[2657:2665],
}

func (i Csr) String() string {
	if str, ok := _Csr_map[i]; ok {
		return str
	}
	return "Csr(" + strconv.FormatInt(int64(i), 10) + ")"
}
